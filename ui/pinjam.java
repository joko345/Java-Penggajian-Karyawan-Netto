/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import koneksi.koneksi;
/**
 *
 * @author Joko Prasetyo Utomo
 */
public class pinjam extends javax.swing.JFrame {
 
    private Connection conn = new koneksi().connect();
    private DefaultTableModel tabmode;
    String oldId = null;
    /**
     * Creates new form pinjam
     */
       
private void dataTable() {
    Object[] Baris = {"Id Karyawan", "Nama Karyawan", "Pinjaman", "Keterangan", "Tanggal"};
    tabmode = new DefaultTableModel(null, Baris);
    jTable1.setModel(tabmode);
    
    String sql = "SELECT a.nik, b.namaKaryawan, a.pinjaman, a.keterangan, a.tgl " +
                 "FROM pinjaman a " +
                 "JOIN dataKaryawan b ON b.nik = a.nik";
    
    try {
        java.sql.Statement stat = conn.createStatement();
        ResultSet hasil = stat.executeQuery(sql);
        
        while (hasil.next()) {
            String idnik = hasil.getString("nik");
            String nama = hasil.getString("namaKaryawan");
            String pj = hasil.getString("pinjaman");
            String kt = hasil.getString("Keterangan");  
            Date tanggal = hasil.getDate("tgl");
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String tgl = sdf.format(tanggal); // Format Date to String
            String[] data = {idnik, nama, pj, kt,  tgl};
            tabmode.addRow(data);
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
    }
}
    private void kosong(){
    nama.setText("");
    boxNik.setSelectedIndex(0);
    pinjam.setText("");
    keterangan.setText("");
    tgl.setCalendar(null);
    }
 
    public pinjam() {
        initComponents();
        dataTable();
        setIdKaryawan();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        boxNik = new javax.swing.JComboBox<>();
        txtnama = new javax.swing.JLabel();
        txtnik = new javax.swing.JLabel();
        nama = new javax.swing.JTextField();
        txtpinjam = new javax.swing.JLabel();
        pinjam = new javax.swing.JTextField();
        txttekerangan = new javax.swing.JLabel();
        keterangan = new javax.swing.JTextField();
        tgl = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        save = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        kembali = new javax.swing.JButton();
        bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 130, 560, -1));

        boxNik.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        boxNik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxNikActionPerformed(evt);
            }
        });
        getContentPane().add(boxNik, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 160, 90, -1));

        txtnama.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtnama.setForeground(new java.awt.Color(255, 255, 255));
        txtnama.setText("Nama Karyawan");
        getContentPane().add(txtnama, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 200, -1, -1));

        txtnik.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtnik.setForeground(new java.awt.Color(255, 255, 255));
        txtnik.setText("Id Karyawan");
        getContentPane().add(txtnik, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 160, -1, -1));

        nama.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        getContentPane().add(nama, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 200, 90, 30));

        txtpinjam.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtpinjam.setForeground(new java.awt.Color(255, 255, 255));
        txtpinjam.setText("Pinjaman");
        getContentPane().add(txtpinjam, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 250, -1, -1));

        pinjam.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        getContentPane().add(pinjam, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 240, 90, 30));

        txttekerangan.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txttekerangan.setForeground(new java.awt.Color(255, 255, 255));
        txttekerangan.setText("Keterangan");
        getContentPane().add(txttekerangan, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 290, -1, -1));

        keterangan.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        getContentPane().add(keterangan, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 280, 90, 30));
        getContentPane().add(tgl, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 330, 170, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Tanggal");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 330, -1, -1));

        save.setText("Simpan");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        getContentPane().add(save, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 160, -1, -1));

        edit.setText("Ubah");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });
        getContentPane().add(edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 210, 70, -1));

        delete.setText("Hapus");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        getContentPane().add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 250, 70, -1));

        kembali.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        kembali.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bg/back(2).png"))); // NOI18N
        kembali.setContentAreaFilled(false);
        kembali.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        kembali.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                kembaliMouseClicked(evt);
            }
        });
        kembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kembaliActionPerformed(evt);
            }
        });
        getContentPane().add(kembali, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bg/bgpinjam.png"))); // NOI18N
        getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void boxNikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxNikActionPerformed
        // TODO add your handling code here:
        String sql = "SELECT * FROM dataKaryawan WHERE nik = ?";

        try {
            PreparedStatement stat = conn.prepareStatement(sql);
            stat.setString(1, boxNik.getSelectedItem().toString());
            ResultSet hasil = stat.executeQuery();

            while (hasil.next()) {
                nama.setText(hasil.getString("namaKaryawan"));
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_boxNikActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:\
     try {
    String sql = "INSERT INTO pinjaman (nik, namaKaryawan, pinjaman, keterangan, tgl) VALUES (?, ?, ?, ?, ?)";

    PreparedStatement stat = conn.prepareStatement(sql);
    stat.setString(1, boxNik.getSelectedItem().toString());
    stat.setString(2, nama.getText());
    stat.setString(3, pinjam.getText());
    stat.setString(4, keterangan.getText());
    
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    String tanggal = sdf.format(tgl.getDate());
    stat.setString(5, tanggal);

    stat.executeUpdate();
    JOptionPane.showMessageDialog(null, "Data Berhasil Disimpan");
    kosong();
    nama.requestFocus();
    dataTable();
} catch (SQLException e) {
    JOptionPane.showMessageDialog(null, "Data Gagal Disimpan: " + e.getMessage());
}

    }//GEN-LAST:event_saveActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
    int bar = jTable1.getSelectedRow();
    if (bar != -1) {
    try {
        String a = tabmode.getValueAt(bar, 0).toString();  // nik
        String b = tabmode.getValueAt(bar, 1).toString();  // namaKaryawan
        String c = tabmode.getValueAt(bar, 2).toString();  // pinjaman
        String d = tabmode.getValueAt(bar, 3).toString();  // keterangan
        String e = tabmode.getValueAt(bar, 4).toString();  // tgl

        this.oldId = a;
        boxNik.setSelectedItem(a);
        nama.setText(b);
        pinjam.setText(c);
        keterangan.setText(d);

        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        java.util.Date tanggal = dateFormat.parse(e);
        tgl.setDate(tanggal);
    } catch (ParseException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(null, "Terjadi kesalahan saat memparsing tanggal.");
    } catch (Exception ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(null, "Terjadi kesalahan saat mengambil data dari tabel.");
    }
} else {
    JOptionPane.showMessageDialog(null, "Pilih data pada tabel terlebih dahulu.");
}

    }//GEN-LAST:event_jTable1MouseClicked

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        // TODO add your handling code here:
        try {
        // Update statement
        String sql = "UPDATE pinjaman SET namaKaryawan = ?, pinjaman = ?, keterangan = ?,  tgl = ? WHERE nik = ?";

        PreparedStatement stat = conn.prepareStatement(sql);
        stat.setString(1, nama.getText());
        stat.setString(2, pinjam.getText());
        stat.setString(3, keterangan.getText());
        
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String tanggal = sdf.format(tgl.getDate());
        stat.setString(4, tanggal);
        
        // Assuming nik is unique and used for identifying the row to update
        stat.setString(5, boxNik.getSelectedItem().toString());

        stat.executeUpdate();
        JOptionPane.showMessageDialog(null, "Data Berhasil Diupdate");
        kosong();
        nama.requestFocus();
        dataTable();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Data Gagal Diupdate: " + e.getMessage());
    }
    }//GEN-LAST:event_editActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
          int ok = JOptionPane.showConfirmDialog(null, "hapus","Konfirmasi Dialog", JOptionPane.YES_NO_CANCEL_OPTION);
        if (ok==0){
            String sql = "delete from pinjaman where nik ='"+boxNik.getSelectedItem()+"'";
            try{
                PreparedStatement stat = conn.prepareStatement(sql);
                stat.executeUpdate();
                JOptionPane.showMessageDialog(null, "Data Berhasil Dihapus");
                kosong();
                nama.requestFocus();
                dataTable();
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, "Data Gagal Dihapus" +e);
            }
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void kembaliMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kembaliMouseClicked
        // TODO add your handling code here:
         home hm=new home();
            hm.setVisible(true);
        this.hide();
    }//GEN-LAST:event_kembaliMouseClicked

    private void kembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kembaliActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kembaliActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pinjam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pinjam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pinjam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pinjam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pinjam().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bg;
    private javax.swing.JComboBox<String> boxNik;
    private javax.swing.JButton delete;
    private javax.swing.JButton edit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton kembali;
    private javax.swing.JTextField keterangan;
    private javax.swing.JTextField nama;
    private javax.swing.JTextField pinjam;
    private javax.swing.JButton save;
    private com.toedter.calendar.JDateChooser tgl;
    private javax.swing.JLabel txtnama;
    private javax.swing.JLabel txtnik;
    private javax.swing.JLabel txtpinjam;
    private javax.swing.JLabel txttekerangan;
    // End of variables declaration//GEN-END:variables
public void setIdKaryawan() {
    List<String> kyList = new ArrayList<>(); // Objek ArrayList yang akan digunakan untuk menyimpan semua idGap yang diambil dari database.
    String sql = "SELECT nik FROM dataKaryawan"; // Query SQL untuk mengambil semua idGap dari tabel gaptabel

    try {
        java.sql.Statement stat = conn.createStatement();
        ResultSet hasil = stat.executeQuery(sql);

        while (hasil.next()) {
            String nik = hasil.getString("nik");
            kyList.add(nik);
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
    }

    DefaultComboBoxModel<String> cbnik = new DefaultComboBoxModel<>();
    for (String nik : kyList) {
        cbnik.addElement(nik);
    }

    boxNik.setModel(cbnik);
}

}
